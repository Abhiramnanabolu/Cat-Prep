generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  tests     UserTest[]
}

model Topic {
  id          String   @id @default(uuid())
  name        String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  questions   Question[] // Relation to Question model
}

model Question {
  id          String   @id @default(uuid())
  question    String
  options     Json?
  answer      String
  type        String
  topicId     String?  // Nullable: Associate with a Topic if applicable
  mockTestId  String?  // Nullable: Associate with a MockTest if applicable
  topic       Topic?   @relation(fields: [topicId], references: [id])
  mockTest    MockTest? @relation(fields: [mockTestId], references: [id])
}

model MockTest {
  id          String   @id @default(uuid())
  title       String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  questions   Question[] // Relation to Question model
  userTests   UserTest[] // Relation to UserTest model
}

model UserTest {
  id         String   @id @default(uuid())
  userId     String
  mockTestId String
  score      Float?
  completed  Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  user       User     @relation(fields: [userId], references: [id])
  mockTest   MockTest @relation(fields: [mockTestId], references: [id])
}
